<?php
require_once str_replace('\\', '/', dirname(__FILE__)) . '/../config/ProjectConfig.php'; ProjectConfig::registerAutoload(); ProjectConfig::loadConstants(); if (DEMO_MODE === 'true') { header('Content-Type: text/xml'); echo '<?xml version="1.0" encoding="utf-8"?>'; ?>
<results>
  <success>false</success>
</results><?php
 exit; } ProjectConfig::initLog(); ProjectConfig::initErrorHandlers(); $MOTO_ROOT_DIR = MOTO_ROOT_DIR; $MOTO_ADMIN_DIR = MOTO_ADMIN_DIR; function _phpIniSizeToInt($size) { preg_match('/^([0-9]+)\s*(P|T|G|M|K){0,1}/i', $size, $matches); $value = isset($matches[1]) ? (int) $matches[1] : 0; $unit = isset($matches[2]) ? strtoupper($matches[2]) : ''; switch($unit) { case 'P': $value *= 1024; case 'T': $value *= 1024; case 'G': $value *= 1024; case 'M': $value *= 1024; case 'K': $value *= 1024; break; } return $value; } function _phpIniSizeToString($size) { $size = trim($size); if (!preg_match('/^[0-9]+$/i', $size)) return $size; $value = ' bytes'; $i = 0; $values = array(' bytes', ' KB', ' MB', ' GB', ' TB', ' PB'); for($i = 0; $i < count($values); $i++) { if ($size > 1024) $size /= 1024; else break; } $value = number_format($size, ($i > 0 ? 0 : 0) ) . $values[$i]; return $value; } $uploaded = true; $messages = array(); $isAuthenticated = false; if (!empty($_POST['session'])) { $isAuthenticated = MotoUtil::isValidUserToken($_POST['session']); } if ($isAuthenticated) { if (empty($_FILES)) { $uploaded = false; array_push($messages, 'Your file size exceeds maximum permitted file size. Please check your server configuration.<br /><a href="http://support.motocms.com/hc/en-us/articles/203437254" target="_blank">Check for a possible solution here.</a>'); } else { try { $upload = new Zend_File_Transfer_Adapter_Http(); $upload->setDestination($MOTO_ADMIN_DIR . '/_tmp'); $upload->addFilter(new MotoFilterFileUniqueRename()); $filters = array(); if (isset($_FILES['file']['name'])) { $x = pathinfo($_FILES['file']['name']); if (isset($x['extension'])) { $filters[] = array('type' => array($x['extension']), 'target' => $MOTO_ROOT_DIR . '/media', 'overwrite' => false); } } $filters[] = array('type' => array('bmp', 'gif', 'jpeg', 'jpg', 'png'), 'target' => $MOTO_ROOT_DIR . '/images', 'overwrite' => false); $filters[] = array('type' => array('avi', 'flv', 'mov', 'mp4', 'mpeg', 'mpg', 'ogm', 'rm', 'wmv'), 'target' => $MOTO_ROOT_DIR . '/media', 'overwrite' => false); $filters[] = array('type' => array('wav', 'wave', 'mp3', 'wma', 'ogg', 'mid', 'midi'), 'target' => $MOTO_ROOT_DIR . '/media', 'overwrite' => false); $filters[] = array('type' => array('swf'), 'target' => $MOTO_ROOT_DIR . '/media', 'overwrite' => false); $upload->addFilter(new MotoFilterFileCategorize($filters, $MOTO_ROOT_DIR)); $upload->addValidator('ExcludeExtension', false, array('php', 'exe', 'com', 'py', 'sh', 'php5', 'php4', 'php3', 'phtml', 'shtml', 'htaccess', 'htpasswd')); $uploadMaxSize = min( _phpIniSizeToInt(ini_get('post_max_size')), _phpIniSizeToInt(ini_get('upload_max_filesize'))); $upload->addValidator('Size', false, $uploadMaxSize); if (!($uploaded = $upload->receive())) { $uploaded = false; $errorMessages = array( 'fileUploadErrorIniSize' => 'This file exceeds the ' . _phpIniSizeToString($uploadMaxSize) . ' attachment limit.' ); $errors = $upload->getMessages(); foreach ($errors as $key => $message) { if (isset($errorMessages[$key])) $message = $errorMessages[$key]; array_push($messages, $key . '|' . $message); } } if ($uploaded && file_exists($upload->getFileName('file'))) { MotoUtil::fixFilePermission( $upload->getFileName('file') ); $filename = $upload->getFileName('file'); if ($MOTO_ROOT_DIR != '/' && $MOTO_ROOT_DIR != '\\') $filename = str_replace($MOTO_ROOT_DIR, '', $filename); $filename = str_replace('\\', '/', $filename); $filename = str_replace('//', '/', $filename); if ($filename[0] == "/") $filename = substr($filename, 1); $info = pathinfo($filename); $thumbnail = $filename; if ($info["dirname"] == "images" && defined("THUMBNAILS_ENABLED") && THUMBNAILS_ENABLED == "true" && function_exists("getimagesize") ) { $size = getimagesize($MOTO_ROOT_DIR . "/" . $filename); if ($size && ($size[0] > THUMBNAIL_MAX_WIDTH || $size[1] > THUMBNAIL_MAX_HEIGHT)) { try { $_SERVER['REQUEST_TIME'] = time(); $thumbnail = MotoImgUtil::makeAutoThumbnail($filename, true); } catch(Exception $e) { $thumbnail = ''; } } if ($thumbnail == "" || $thumbnail === false) $thumbnail = $filename; } } } catch (Exception $e) { $uploaded = false; $messages = array($e->getMessage()); } } } else { $uploaded = false; array_push($messages, "Access denied."); } header('Content-Type: text/xml'); ?>
<?php echo '<?xml version="1.0" encoding="utf-8"?>' ?>
<results>
  <success><?php echo $uploaded ? 'true' : 'false'; ?></success>
  <?php if ($uploaded): ?>
    <file><?php echo $filename; ?></file>
    <thumbnail><?php echo $thumbnail; ?></thumbnail>
  <?php endif; ?>

  <?php if (!$uploaded): ?>
    <?php foreach ($messages as $key => $message): ?>
      <error><?php echo $message; ?></error>
    <?php endforeach; ?>
  <?php endif; ?>
</results>
<?php exit; ?>