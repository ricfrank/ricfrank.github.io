<?php
class LayoutVO extends MotoObjectsHolderVO { public $id; public function __construct(DOMNode $parent = null) { parent::__construct($parent); if (!empty($parent)) { $this->loadDomElement($parent); } } public function loadDomElement(DOMNode $parent) { parent::loadDomElement($parent); $this->id = (integer) $parent->getAttribute('layoutType'); return $this; } public function saveDomElement(DOMNode $parent) { parent::saveDomElement($parent); $parent->setAttribute('layoutType', (integer) $this->id); return $parent; } public function updateDomElement(DOMNode $parent) { $newNode = new DOMElement('layout'); $oldNode = MotoXML::findOneByXPath(".//layout[@layoutType='{$this->id}']", $parent); if (!is_null($oldNode)) { $parent->replaceChild($newNode, $oldNode); } else { $parent->appendChild($newNode); } return $this->saveDomElement($newNode); } public static function findById($id, DOMNode $context) { return MotoXML::findOneByXPath(".//layout[@layoutType='{$id}']", $context, get_class()); } public static function findAll(DOMNode $context) { return MotoXML::findByXPath(".//layout", $context, get_class()); } }