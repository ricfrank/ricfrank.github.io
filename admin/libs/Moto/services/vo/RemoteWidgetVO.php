<?php
class RemoteWidgetVO extends WidgetVO { public $componentId; public $rating; public $downloads; public $downloadLink; public $price; public $fileStamp; public $fileSize; public $releaseNotes; public function __construct($parent = null) { if (!is_null($parent)) { if (is_array($parent)) { $this->setFromArray($parent); } else { parent::__construct($parent); } } } public function loadDomElement(DOMNode $parent) { parent::loadDomElement($parent); $node = MotoXML::findOneByXPath('./releaseNotes', $parent); if (!is_null($node)) $this->releaseNotes = (string) MotoUtil::trim($node->nodeValue); } public function setFromArray($data) { $this->componentId = $data['id']; $this->nameSpace = $data['authorNameRewrited']; $this->uid = $data['itemNumber']; $this->authorLink = $data['previewUrl']; $this->icon = $data['smallPreviewUrl']; if (isset($data['metaData'])) { $metaData = $data['metaData']; $this->name = $this->get($metaData, 'title', ''); $this->description = $this->get($metaData, 'description', ''); } if (isset($data['features'])) { $features = $data['features']; $this->type = $this->get($features, 'type', ''); $this->authorName = $this->get($features, 'author', ''); $this->downloads = $this->get($downloads, 'type', 0); $this->rating = $this->get($features, 'votes_rate', 0); } if (isset($data['complectations'])) { $complectations = $data['complectations'][0]; $this->build = $this->get($complectations['features'], 'build', 0); $this->version = $this->get($complectations['features'], 'version', ''); $this->price = $this->get($complectations['features'], 'price', 0); $this->minCompatibleVersion = $this->get($complectations['features'], 'mincompatibleversion', ''); } if (isset($data['categories'])) { $categories = $data['categories'][0]; $this->category = $this->get($categories, 'name', ''); } } function get($obj, $name, $default = null) { if (is_array($obj)) return (isset($obj[$name]) ? $obj[$name] : $default); if (is_object($obj)) return (isset($obj->$name) ? $obj->$name : $default); return $default; } }