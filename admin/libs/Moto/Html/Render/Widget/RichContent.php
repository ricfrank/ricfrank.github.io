<?php
class Moto_Html_Render_Widget_RichContent extends Moto_Html_Render_Widget_Abstract { function proccess($obj, $parent = null) { $this->_module = $obj; $this->_parent = $parent; $html = $this->_proccess($obj); return $html; } function _proccess($obj) { $html = ''; $content = $this->getContent($obj); $obj->type = ucfirst($obj->type); $data = array( 'id' => 'widget_' . $obj->id, 'class' => $this->getCssClass($obj), 'style' => $this->getStyle($obj, null, false), 'widget.dimensions' => $this->getStyleDimensions($obj), 'content' => $content, 'widget' => Moto_Html_Util::implodeArraySimple( $this->_module ), 'widget.properties' => Moto_Html_Util::implodeArray( $this->_module->properties ), 'widget.parameters' => Moto_Html_Util::implodeArray( $this->_module->parameters ), ); $template = $obj->getTemplate('main'); if ($template == '') $template = $this->getTemplate('main'); $html = $this->_render($template, $data); return $html; } function getContent($object) { $html = ''; if (isset($object->data->objects) && is_array($object->data->objects)) { foreach($object->data->objects as $_obj) { $html .= $this->renderElement($_obj, $object); } } else { } if (isset($object->data->slots) && is_array($object->data->slots)) { foreach($object->data->slots as $_obj) { $html .= $this->renderElement($_obj, $object); } } else { } if (isset($object->data->modules) && is_array($object->data->modules)) { foreach($object->data->modules as $_obj) { $html .= $this->renderElement($_obj, $object); } } else { } return $html; } }