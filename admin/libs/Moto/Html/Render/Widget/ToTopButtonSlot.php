<?php
class Moto_Html_Render_Widget_ToTopButtonSlot extends Moto_Html_Render_Widget_Abstract { function proccess($obj, $parent = null) { $this->_module = $obj; $this->_parent = $parent; $html = $this->_proccess($obj); return $html; } function _proccess($obj) { $html = ''; $borderTop = $obj->properties['buttonStyle']['style']->borderTThickness; $paddingTop = $obj->properties['buttonStyle']['style']->paddingTop; $borderLeft = $obj->properties['buttonStyle']['style']->borderLThickness; $paddingLeft = $obj->properties['buttonStyle']['style']->paddingLeft; $obj->x -= $borderLeft + $paddingLeft; $obj->y -= $borderTop + $paddingTop; $actHeight = $obj->height; $obj->height += $obj->properties['buttonStyle']['style']->borderBThickness + $obj->properties['buttonStyle']['style']->paddingBottom + $borderTop + $paddingTop; $actWidth = $obj->width; $obj->width += $obj->properties['buttonStyle']['style']->borderRThickness + $obj->properties['buttonStyle']['style']->paddingRight + $borderLeft + $paddingLeft; if ($obj->snapping) { if ($obj->left != null && $obj->right != null) $actWidth = ''; if ($obj->top != null && $obj->bottom != null) $actHeight = ''; } $content = ''; $obj->type = $obj->getType()->getExtraData('jsClass'); $data = array( 'id' => 'widget_' . $obj->id, 'class' => $this->getCssClass($obj), 'actHeight' => $actHeight, 'actWidth' => $actWidth, 'content' => $content, 'widget' => Moto_Html_Util::implodeArraySimple( $this->_module ), 'widget.properties' => Moto_Html_Util::implodeArray( $this->_module->properties ), 'widget.parameters' => Moto_Html_Util::implodeArray( $this->_module->parameters ), ); $template = $obj->getTemplate('main'); if ($template == '') $template = $this->getTemplate('main'); $html = $this->_render($template, $data); return $html; } }