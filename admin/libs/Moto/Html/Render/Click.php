<?php
class Moto_Html_Render_Click { static protected $_instance = null; protected $_options = array(); public $clicks = null; protected $_default = array( 'href' => '', 'onclick' => '', 'url' => '', 'target' => '', 'rel' => '', 'url' => '', 'action' => '', 'a' => '', 'class' => 'mjs-link-bindable', '_template' => '<a href="{%href%}" class="{%class%}" rel="{%rel%}" data-action="{%action%}" data-url="{%url%}" target="{%target%}">' ); function __construct($options = array()) { $this->_options = $options; } static function setClicks(Moto_Html_ClicksVO $clicks) { self::getInstance()->clicks = $clicks; } static function getInstance($options = array()) { if (self::$_instance == null) self::$_instance = new self($options); return self::$_instance; } static function setInstance($instance) { if (self::$_instance == null) self::$_instance = $instance; return self::$_instance; } static function init($options = array()) { self::getInstance($options); } function getPage() { return MotoConfig::get('page'); } function getOption($name, $default = null) { return ( isset($this->_options[$name]) ? $this->_options[$name] : $default); } function setOption($name, $value) { $this->_options[$name] = $value; return $this; } function getOptions() { return $this->_options; } function parse($event, $params = array()) { $action = ''; if (preg_match('/^(event:)?([^;]+)[;]?(.*)$/i', $event, $m)) { $action = $m[2]; if (isset($m[3]) && $m[3] != '' && preg_match_all('/[;]?([^=]+)\=([^;]+)[;]?/i', $m[3], $m)) { $icount = count($m[0]); for($i = 0; $i < $icount; $i++) { $params[$m[1][$i]] = $m[2][$i]; } } } $method_name = '_' . $action; if (method_exists($this, $method_name)) { $click = array_merge($this->_default, $this->$method_name($params, $event) ); } else { $click = $this->_default; } $click['action'] = $action; if (isset($params['addClass'])) { $click['class'] .= ' ' . $params['addClass']; } $click = $this->render($click); return $click; } function getPageById($id, $key = '*') { if ($this->clicks == null) return null; $result = $this->clicks->getPageById($id); if ($key != '*') { $result = ( isset($result[$key]) ? $result[$key] : null ); } return $result; } function render($click) { if ($click['_template'] != '') $click['a'] = Moto_Html_Util::renderTemplate($click['_template'], $click); $click['a'] = preg_replace('/([^=\s]+=\"\")/', '', $click['a']); $click = new Moto_Html_Data($click); return $click; } function _switchPage($params, $event) { $data = array( 'rel' => '', ); if ($this->clicks !== null) $page = $this->clicks->getPageById($params['page']); else $page = null; $data['url'] = ($page != null && isset($page->url) ? $page->url : '#'); $data['href'] = rtrim($this->getOption('website.url'), '/') . '/' . $this->getOption('href.prefix', '') . $data['url']; $robots = array(); if ($page != null) { if ($page->noFollow) $robots[] = 'nofollow'; if ($page->noIndex) $robots[] = 'noindex'; } $data['rel'] = implode(',', $robots); return $data; } function _openPopup($params, $event) { $data = array( 'rel' => '', ); if ($this->clicks !== null) $page = $this->clicks->getPopupById($params['id']); else $page = null; $data['url'] = ($page != null && isset($page->url) ? $page->url : '#'); $data['href'] = rtrim($this->getOption('website.url'), '/') . '/' . $this->getOption('href.prefix', '') . $data['url']; $robots = array(); if ($page != null) { if ($page->noFollow) $robots[] = 'nofollow'; if ($page->noIndex) $robots[] = 'noindex'; } $data['rel'] = implode(',', $robots); return $data; } function _closePopup($params, $event) { $data = array( 'a' => '<a href="#" class="mjs-link-bindable" data-action="closePopup">', 'href' => '#', '_template' => '', ); return $data; } function _getURL($params, $event) { $data = array( 'url' => '', 'target' => '', 'rel' => (isset($params['rel']) ? $params['rel'] : ''), 'class' => '', ); if (isset($params['window'])) $data['target'] = $params['window']; $data['href'] = $data['url'] = (isset($params['url']) ? urldecode($params['url']) : '#'); return $data; } function _mailTo($params, $event) { $data = array( 'class' => '', ); $data['href'] = $data['url'] = (isset($params['email']) ? 'mailto:' . urldecode($params['email']) : '#'); return $data; } function _openFile($params, $event) { $data = array( 'class' => '', 'target' => '_blank', ); $data['href'] = $data['url'] = rtrim($this->getOption('website.basePath'), '/') . '/' . $params['file']; return $data; } function _openLightbox($params, $event) { $data = array( 'url' => '', 'target' => '_blank', '_template' => '<a href="{%href%}" class="{%class%}" rel="{%rel%}" data-action="{%action%}" data-url="{%url%}" data-type="{%type%}">' ); if (isset($params['type'])) $data['type'] = $params['type']; $data['href'] = '#'; $data['url'] = (isset($params['source']) ? urldecode($params['source']) : '#'); switch($data['type']) { case 'image': $data['_template'] = '<a href="{%href%}" class="{%class%}" rel="{%rel%}" data-action="{%action%}" data-url="{%url%}" data-type="{%type%}" target="_blank">'; $data['url'] = 'type=image'; $image = Moto_Html_MediaLibrary::findBySource($params['source']); if ($image) { if (isset($image->parameters['width'])) { $data['image.width'] = $image->parameters['width']; $data['url'] .= ';width=' . $image->parameters['width']; } if (isset($image->parameters['height'])) { $data['image.height'] = $image->parameters['height']; $data['url'] .= ';height=' . $image->parameters['height']; } } $data['href'] = rtrim($this->getOption('website.basePath'), '/') . '/' . $params['source']; $data['url'] .= ';url=' . rtrim($this->getOption('website.basePath'), '/') . '/' . $params['source']; break; case 'youtube': $data['url'] = 'type=youtube;url=' . $params['source']; $data['href'] = '//www.youtube.com/watch?v=' . $params['source']; $data['_template'] = '<a href="{%href%}" class="{%class%}" rel="{%rel%}" data-action="{%action%}" data-url="{%url%}" data-type="{%type%}" target="_blank">'; break; default: break; } return $data; } } 