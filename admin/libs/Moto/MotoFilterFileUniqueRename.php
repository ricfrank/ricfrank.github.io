<?php
 require_once 'Zend/Filter/Interface.php'; require_once 'MotoUtil.php'; class MotoFilterFileUniqueRename implements Zend_Filter_Interface { public function filter($source) { if (!file_exists($source)) { require_once 'Zend/Filter/Exception.php'; throw new Zend_Filter_Exception("File '$source' not found"); } if (preg_match("/^[a-z0-9_\-]+\.[a-z0-9]+$/i", basename($source)) && basename($source) == ltrim(substr($source, strrpos($source, DIRECTORY_SEPARATOR) ), DIRECTORY_SEPARATOR) ) { return $source; } $dirname = str_replace('\\', '/', dirname($source)); $target = $dirname . '/' . str_replace(' ', '_', basename($source)); $tmp = explode('.', $source); $ext = strtolower(end($tmp)); while(file_exists($target = $dirname . '/' . uniqid() . '.' . $ext)) { continue; } $result = rename($source, $target); if ($result === true) { return $target; } require_once 'Zend/Filter/Exception.php'; throw new Zend_Filter_Exception(sprintf("File '%s' could not be renamed. An error occured while processing the file.", $source)); } }