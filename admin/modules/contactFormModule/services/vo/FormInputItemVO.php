<?php
 class FormInputItemVO extends FormItemVO { public $textToShow; public $validator; public $minChars; public $regExp; public $regExpFlags; public $minValue; public $maxValue; public $allowNegative; public $minLettersAfterLastPoint; public $maxLettersAfterLastPoint; public $minLettersBeforeAt; public $maxLettersBeforeAt; public $mask; public $minDateAllowed; public $maxDateAllowed; public $restrict; public $maxChars; public $password; public $multiline; public function loadDomElement(DOMNode $parent) { parent::loadDomElement($parent); $nodeValue = $parent->getElementsByTagName('textToShow')->item(0); if (!is_null($nodeValue)) $this->textToShow = (string) $nodeValue->nodeValue; $nodeValue = $parent->getElementsByTagName('validator')->item(0); if (!is_null($nodeValue)) $this->validator = (string) $nodeValue->nodeValue; $nodeValue = $parent->getElementsByTagName('regExp')->item(0); if (!is_null($nodeValue)) $this->regExp = (string) $nodeValue->nodeValue; $nodeValue = $parent->getElementsByTagName('regExpFlags')->item(0); if (!is_null($nodeValue)) $this->regExpFlags = (string) $nodeValue->nodeValue; $nodeValue = $parent->getElementsByTagName('mask')->item(0); if (!is_null($nodeValue)) $this->mask = (string) $nodeValue->nodeValue; $nodeValue = $parent->getElementsByTagName('restrict')->item(0); if (!is_null($nodeValue)) $this->restrict = (string) $nodeValue->nodeValue; $nodeValue = $parent->getElementsByTagName('minChars')->item(0); if (!is_null($nodeValue)) $this->minChars = (int) $nodeValue->nodeValue; $nodeValue = $parent->getElementsByTagName('minLettersAfterLastPoint')->item(0); if (!is_null($nodeValue)) $this->minLettersAfterLastPoint = (int) $nodeValue->nodeValue; $nodeValue = $parent->getElementsByTagName('maxLettersAfterLastPoint')->item(0); if (!is_null($nodeValue)) $this->maxLettersAfterLastPoint = (int) $nodeValue->nodeValue; $nodeValue = $parent->getElementsByTagName('minLettersBeforeAt')->item(0); if (!is_null($nodeValue)) $this->minLettersBeforeAt = (int) $nodeValue->nodeValue; $nodeValue = $parent->getElementsByTagName('maxLettersBeforeAt')->item(0); if (!is_null($nodeValue)) $this->maxLettersBeforeAt = (int) $nodeValue->nodeValue; $nodeValue = $parent->getElementsByTagName('minDateAllowed')->item(0); if (!is_null($nodeValue)) $this->minDateAllowed = (int) $nodeValue->nodeValue; $nodeValue = $parent->getElementsByTagName('maxDateAllowed')->item(0); if (!is_null($nodeValue)) $this->maxDateAllowed = (int) $nodeValue->nodeValue; $nodeValue = $parent->getElementsByTagName('maxChars')->item(0); if (!is_null($nodeValue)) $this->maxChars = (int) $nodeValue->nodeValue; $nodeValue = $parent->getElementsByTagName('minValue')->item(0); if (!is_null($nodeValue)) $this->minValue = (float) $nodeValue->nodeValue; $nodeValue = $parent->getElementsByTagName('maxValue')->item(0); if (!is_null($nodeValue)) $this->maxValue = (float) $nodeValue->nodeValue; $nodeValue = $parent->getElementsByTagName('allowNegative')->item(0); if (!is_null($nodeValue)) $this->allowNegative = (boolean) MotoUtil::toBoolean($nodeValue->nodeValue); $nodeValue = $parent->getElementsByTagName('password')->item(0); if (!is_null($nodeValue)) $this->password = (boolean) MotoUtil::toBoolean($nodeValue->nodeValue); $nodeValue = $parent->getElementsByTagName('multiline')->item(0); if (!is_null($nodeValue)) $this->multiline = (boolean) MotoUtil::toBoolean($nodeValue->nodeValue); } public function saveDomElement(DOMNode $parent) { parent::saveDomElement($parent); $parent->appendChild(new DOMElement('textToShow')) ->appendChild($parent->ownerDocument->createCDATASection($this->textToShow)); $parent->appendChild(new DOMElement('validator', $this->validator)); $parent->appendChild(new DOMElement('minChars', $this->minChars)); $parent->appendChild(new DOMElement('regExp')) ->appendChild($parent->ownerDocument->createCDATASection($this->regExp)); $parent->appendChild(new DOMElement('regExpFlags', $this->regExpFlags)); $parent->appendChild(new DOMElement('minValue', $this->minValue)); $parent->appendChild(new DOMElement('maxValue', $this->maxValue)); $parent->appendChild(new DOMElement('allowNegative', MotoUtil::boolToString($this->allowNegative))); $parent->appendChild(new DOMElement('minLettersAfterLastPoint', $this->minLettersAfterLastPoint)); $parent->appendChild(new DOMElement('maxLettersAfterLastPoint', $this->maxLettersAfterLastPoint)); $parent->appendChild(new DOMElement('minLettersBeforeAt', $this->minLettersBeforeAt)); $parent->appendChild(new DOMElement('maxLettersBeforeAt', $this->maxLettersBeforeAt)); $parent->appendChild(new DOMElement('mask')) ->appendChild($parent->ownerDocument->createCDATASection($this->mask)); $parent->appendChild(new DOMElement('minDateAllowed', $this->minDateAllowed)); $parent->appendChild(new DOMElement('maxDateAllowed', $this->maxDateAllowed)); $parent->appendChild(new DOMElement('restrict')) ->appendChild($parent->ownerDocument->createCDATASection($this->restrict)); $parent->appendChild(new DOMElement('maxChars', $this->maxChars)); $parent->appendChild(new DOMElement('password', MotoUtil::boolToString($this->password))); $parent->appendChild(new DOMElement('multiline',MotoUtil::boolToString($this->multiline))); return $parent; } } ?>